#  Задание 1 Реализовать функцию, принимающую два числа (позиционные аргументы) и
#  выполняющую их деление. Числа запрашивать у пользователя,
#  предусмотреть обработку ситуации деления на ноль.

def calculator(x, y):
    try:
        return x / y
    except ZeroDivisionError:
        print(f'Нельзя делить на 0. Ошибка!')


print(calculator(int(input('Внесите число х: ')), int(input('Внесите число у: '))))


# Задание 2 Реализовать функцию, принимающую несколько параметров,
# описывающих данные пользователя: имя, фамилия, год рождения,
# город проживания, email, телефон. Функция должна принимать параметры
# как именованные аргументы. Реализовать вывод данных о пользователе одной строкой.

def user_list(firstname, lastname, year_birth, city, email, phone):
    return print(f'Имя: {firstname}, Фамилия: {lastname}, '
                 f'Год рождения: {year_birth},'
                 f'Город проживания: {city}, Email: {email}, '
                 f'Телефон: {phone}.')


user_list(
    firstname=input('Имя: '),
    lastname=input('Фамилия: '),
    year_birth=input('Год Рождения: '),
    email=input('email: '),
    city=input('Город проживания: '),
    phone=input('phone: '))


# Задание 3 Реализовать функцию my_func(), которая принимает
# три позиционных аргумента, и возвращает сумму наибольших двух аргументов.

def my_func(x, y, z):
    print(f'Сумма наибольших двух чисел: {x + y + z - min([x, y, z])}')


my_func(
    int(input('Число x: ')),
    int(input('Число z: ')),
    int(input('Число y: ')))


# Задание 4 Программа принимает действительное положительное
# число x и целое отрицательное число y. Необходимо выполнить
# возведение числа x в степень y. Задание необходимо реализовать
# в виде функции my_func(x, y).
# При решении задания необходимо обойтись без встроенной функции
# возведения числа в степень.

def my_func(x, y):
    return x ** -y


print(f'Вариант 1: ' f'{my_func(int(input("Основание x: ")), int(input("Степень у: ")))}')


def my_func_2(x, y):
    i = 1
    result = 1 / x
    while i < y:
        result = result * (1 / x)
        i += 1
        return result
print(f'Вариант 2: ' f'{my_func_2(int(input("Основание x: ")), int(input("Степень у: ")))}')


# Задание 5 Программа запрашивает у пользователя строку чисел,
# разделенных пробелом. При нажатии Enter должна выводиться сумма чисел.
# Пользователь может продолжить ввод чисел, разделенных пробелом и
# снова нажать Enter. Сумма вновь введенных чисел будет добавляться
# к уже подсчитанной сумме. Но если вместо числа вводится специальный
# символ, выполнение программы завершается. Если специальный символ
# введен после нескольких чисел, то вначале нужно добавить сумму этих
# чисел к полученной ранее сумме и после этого завершить программу.

def number_sum(numbers):
    sum = 0
    bool = False
    for a in numbers:
        try:
            if a:
                sum += float(a)
        except ValueError:
            bool = True
    return sum, bool

sum_2 = 0

while True:
    b = input('Введите числа через пробел: ').split(' ')
    sum, stop_bool = number_sum(b)
    sum_2 += sum
    print(f'Cумма чисел {sum_2}: ')

    if stop_bool:
        break

# Реализовать функцию int_func(), принимающую слово из маленьких латинских
# букв и возвращающую его же, но с прописной первой буквой.
# Например, # print(int_func(‘text’)) -> Text.
# Продолжить работу над заданием. В программу должна попадать строка
# из слов, разделенных пробелом. Каждое слово состоит из латинских букв
# в нижнем регистре. Сделать вывод исходной строки, но каждое слово должно
# начинаться с заглавной буквы. Необходимо использовать написанную
# ранее функцию int_func().

def int_func(text):
    return text.title()

def int_func_new(text):
    ls = []
    for i in range(len(text)):
        ls.append(text[i][0:3].title() + text[i][1:])
    return ' '.join(ls)

var_1 = []
var_2 = []
for word in input('Напишите предложение: ').split(' '):
    var_1.append(int_func(word))
    var_2.append(int_func_new(word))

print(f'var_1: {" ".join(var_1)}')
print(f'var_2: {" ".join(var_2)}')
